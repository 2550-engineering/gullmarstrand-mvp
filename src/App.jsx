
import React, { useState } from 'react';
import { BrowserRouter as Router, Routes, Route, Link } from "react-router-dom";
import ListingsPage from "./pages/ListingsPage";
import './App.css';
import ListingDetail from './ListingDetail';
import DeliverySelection from './DeliverySelection';
import ContactAddressForm from './ContactAddressForm';
import PaymentWidget from './PaymentWidget';
import Confirmation from './Confirmation';

// Dummy user and listings for demo
const currentUser = { id: 3, name: 'Gabor' }; // Change id to test seller/buyer
const demoListings = [
  {
    id: 1,
    title: 'Vintage Lamp',
    description: 'A beautiful vintage lamp.',
    amount_sek: 500,
    seller_id: 2,
    seller_name: 'Ekaterina',
    sold: false,
  },
  {
    id: 2,
    title: 'Retro Chair',
    description: 'A comfy retro chair.',
    amount_sek: 800,
    seller_id: 4,
    seller_name: 'Mirza',
    sold: false,
  },
  {
    id: 3,
    title: 'Antique Clock',
    description: 'A working antique clock.',
    amount_sek: 1200,
    seller_id: 3,
    seller_name: 'Gabor',
    sold: false,
  },
];

// Add isOwnListing property to each listing
const listingsWithFlag = demoListings.map(listing => ({
  ...listing,
  isOwnListing: currentUser.id === listing.seller_id,
}));

function MarketplaceFlow() {
  const [step, setStep] = useState(1);
  const [selectedListing, setSelectedListing] = useState(null);
  const [deliveryType, setDeliveryType] = useState('pickup');
  const [shippingProvider, setShippingProvider] = useState('postnord');
  const [contact, setContact] = useState({});
  const [orderId, setOrderId] = useState(null);
  const [email, setEmail] = useState('');
  const [orderArgs, setOrderArgs] = useState(null);
  const [pickupRequested, setPickupRequested] = useState(false);

  function handleSelectListing(listing) {
    setSelectedListing(listing);
    setStep(2);
  }

  function handleDeliverySelect(type) {
    setDeliveryType(type);
    // If pickup, go to next step. If flat, stay on this step for provider selection.
    if (type === 'pickup') {
      setStep(3);
    }
  }

  function handleShippingProviderSelect(provider) {
    setShippingProvider(provider);
  }

  function handleContinueFromShipping() {
    setStep(3);
  }

  function handlePickupRequest() {
    // Simulate sending pickup request to seller
    setPickupRequested(true);
    setTimeout(() => setPickupRequested(false), 2000);
    alert('Pickup request sent to seller!');
  }

  function handleContactSubmit(data) {
    setContact(data);
    setEmail(data.email);
    setStep(4);
  }

  function handlePay() {
    // Collect all order arguments
    const order = {
      // id: generated by backend
      buyer_id: currentUser.id,
      listing_id: selectedListing.id,
      seller_id: selectedListing.seller_id,
      amount_sek: selectedListing.amount_sek,
      delivery_type: deliveryType,
      shipping_provider: deliveryType === 'flat' ? shippingProvider : undefined,
      delivery_address: deliveryType === 'flat' ? contact.address : undefined,
      status: 'created',
      created_at: new Date().toISOString(),
    };
    setOrderArgs(order);
    // Simulate order creation and payment
    setOrderId('ORDER12345');
    setStep(5);
  }

  function handleReset() {
    setStep(1);
    setSelectedListing(null);
    setDeliveryType('pickup');
    setShippingProvider('postnord');
    setContact({});
    setOrderId(null);
    setEmail('');
    setOrderArgs(null);
    setPickupRequested(false);
  }

  return (
    <div className="marketplace">
      {step === 1 && (
        <div>
          <h2>Available Listings</h2>
          {listingsWithFlag.map(listing => (
            <div key={listing.id} style={{ border: '1px solid #ccc', margin: 8, padding: 8 }}>
              <ListingDetail listing={listing} onBuyNow={() => handleSelectListing(listing)} />
            </div>
          ))}
        </div>
      )}
      {step === 2 && selectedListing && (
        <div>
          <DeliverySelection
            deliveryType={deliveryType}
            onSelect={handleDeliverySelect}
            onPickupRequest={handlePickupRequest}
            shippingProvider={shippingProvider}
            onShippingProviderSelect={handleShippingProviderSelect}
          />
          {deliveryType === 'flat' && (
            <button
              style={{ marginTop: 16 }}
              type="button"
              disabled={!shippingProvider}
              onClick={handleContinueFromShipping}
            >
              Continue
            </button>
          )}
        </div>
      )}
      {step === 3 && (
        <ContactAddressForm onSubmit={handleContactSubmit} />
      )}
      {step === 4 && selectedListing && (
        <PaymentWidget amount={selectedListing.amount_sek} onPay={handlePay} />
      )}
      {step === 5 && (
        <div>
          <Confirmation orderId={orderId} email={email} orderArgs={orderArgs} />
          <button onClick={handleReset} style={{ marginTop: 16 }}>
            Start New Order
          </button>
        </div>
      )}
    </div>
  );
}

function App() {
  return (
    <Router>
      <div className="App">
        <nav style={{ padding: '1rem', borderBottom: '1px solid #ccc' }}>
          <Link to="/" style={{ marginRight: '1rem' }}>Home</Link>
          <Link to="/listings" style={{ marginRight: '1rem' }}>Listings (Page)</Link>
        </nav>
        <Routes>
          <Route path="/" element={
            <div>
              <header className="App-header">
                <img src="Octocat.png" className="App-logo" alt="logo" />
                <p>
                  Gullmarstrand MVP <span className="heart">♥️</span> React
                </p>
                <p className="small">
                  Edit <code>src/App.jsx</code> and save to reload.
                </p>
              </header>
            </div>
          } />
          <Route path="/listings" element={<ListingsPage />} />
        </Routes>
      </div>
    </Router>
  );
}

export default App;
